[{"C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\index.js":"1","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\App.js":"2","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\reportWebVitals.js":"3","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Dashboard\\Dashboard.js":"4","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Drawing.js":"5","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Header\\Header.js":"6","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Square.js":"7","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Stars.js":"8","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Rectangle.js":"9","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Circles.js":"10","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Hexagon.js":"11","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Triangles.js":"12","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Diamonds.js":"13"},{"size":500,"mtime":1610633760000,"results":"14","hashOfConfig":"15"},{"size":863,"mtime":1610633760000,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1610633760000,"results":"17","hashOfConfig":"15"},{"size":22789,"mtime":1612433450974,"results":"18","hashOfConfig":"15"},{"size":19583,"mtime":1612359954735,"results":"19","hashOfConfig":"15"},{"size":10960,"mtime":1612421568862,"results":"20","hashOfConfig":"15"},{"size":2377,"mtime":1612352405344,"results":"21","hashOfConfig":"15"},{"size":2082,"mtime":1612352413253,"results":"22","hashOfConfig":"15"},{"size":2194,"mtime":1612352054989,"results":"23","hashOfConfig":"15"},{"size":2219,"mtime":1612352065250,"results":"24","hashOfConfig":"15"},{"size":2123,"mtime":1612352390267,"results":"25","hashOfConfig":"15"},{"size":2126,"mtime":1612352357796,"results":"26","hashOfConfig":"15"},{"size":2271,"mtime":1612352377062,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"pvb176",{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":55,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"30"},"C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\index.js",[],["64","65"],"C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\App.js",["66","67","68","69","70"],"import logo from \"./logo.svg\";\nimport Drawing1 from \"./Drawing/Drawing\";\nimport \"./App.css\";\nimport React from \"react\";\nimport Sketch from \"react-p5\";\nimport Header from \"./Header/Header\";\nimport Dashboard from \"./Dashboard/Dashboard\";\nimport Drawing from \"./Drawing/Drawing\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nfunction App() {\n \n\n  return (\n    //   <div className=\"App\" onMouseUp={handleEvent} onMouseDown={handleEvent} >\n    //     <Drawing1></Drawing1>\n    //   \n    // </div>\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Header></Header>\n          </Route>\n          <Route path=\"/drawing\">\n            <Drawing>\n           \n            </Drawing>\n           \n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\reportWebVitals.js",[],"C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Dashboard\\Dashboard.js",["71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Drawing.js",["126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"import React from \"react\";\nimport \"./Drawing.css\";\nimport Sketch from \"react-p5\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Square from \"./Square\";\nimport Rectangle from \"./Rectangle\";\nimport Stars from \"./Stars\";\nimport Circles from \"./Circles\";\nimport Diamonds from \"./Diamonds\";\nimport Hexagon from \"./Hexagon\";\nimport Triangles from \"./Triangles\";\nimport { Stage, Layer, Arrow } from \"react-konva\";\nimport Screen1 from \"../img/screen1.svg\";\nimport Screen2 from \"../img/screen2.svg\";\nimport Screen3 from \"../img/screen3.svg\";\nimport SortName from \"../img/sort_name.svg\";\nimport Logo from \"../img/sozo.jpg\";\nimport Konva from \"konva\";\n\nclass Drawing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.drawRect = this.drawRect.bind(this);\n    this.drawCircle = this.drawCircle.bind(this);\n    this.drawSquare = this.drawSquare.bind(this);\n    this.drawStar = this.drawStar.bind(this);\n    this.drawTriangle = this.drawTriangle.bind(this);\n    this.drawDiamond = this.drawDiamond.bind(this);\n    this.drawHexagon = this.drawHexagon.bind(this);\n    this.drawArrow = this.drawArrow.bind(this);\n    this.colorlist =['#FFF1AA', '#F8AD96', '#EF5F9E','#F7C5DA','#EAE15F','#C094C1','#D5D2E2','#E2E2E2','#B8DECD','#58C2BF','#31BDDF','#AACDE9'];\n    this.state = {\n      id: 0,\n      selectedId: \"\",\n      rectlst: [],\n      shapeX: 0,\n      shapeY: 0,\n      circles: [],\n      square: [],\n      stars: [],\n      triangles: [],\n      diamonds: [],\n      hexagon: [],\n      arrows: [],\n      pickColor:null\n    \n    };\n  }\n\n  drawRect() {\n    this.setState({\n      id: this.state.id + 1,\n    });\n    let props = {\n      x: 400,\n      y: 300,\n      width: 150,\n      height: 80,\n\n      id: \"rect\" + this.state.id,\n    };\n    this.setState({\n      rectlst: this.state.rectlst.concat(props),\n    });\n  }\n  drawCircle() {\n    this.setState({\n      id: this.state.id + 1,\n    });\n    let props = {\n      x: 400,\n      y: 300,\n      radius:50,\n\n      id: \"circle\" + this.state.id,\n    };\n    this.setState({\n      circles: this.state.circles.concat(props),\n    });\n  }\n  drawSquare() {\n    this.setState({\n      id: this.state.id + 1,\n    });\n    let props = {\n      x: 400,\n      y: 300,\n      width: 100,\n      height: 100,\n\n      id: \"square\" + this.state.id,\n    };\n    this.setState({\n      square: this.state.square.concat(props),\n    });\n  }\n  drawStar() {\n    this.setState({\n      id: this.state.id + 1,\n    });\n    let props = {\n      x: 400,\n      y: 300,\n     \n      numPoints:6,\n        innerRadius:40,\n        outerRadius:70,\n      id: \"star\" + this.state.id,\n    };\n    this.setState({\n      stars: this.state.stars.concat(props),\n    });\n  }\n  drawTriangle() {\n    this.setState({\n      id: this.state.id + 1,\n    });\n    let props = {\n      x: 400,\n      y: 300,\n      \n      radius:80,\n\n      id: \"triangle\" + this.state.id,\n    };\n    this.setState({\n      triangles: this.state.triangles.concat(props),\n    });\n  }\n  drawDiamond() {\n    this.setState({\n      id: this.state.id + 1,\n    });\n    let props = {\n      x: 400,\n      y: 300,\n      \n      radius:80,\n\n      id: \"diamonds\" + this.state.id,\n    };\n    this.setState({\n      diamonds: this.state.diamonds.concat(props),\n    });\n  }\n  drawHexagon() {\n    this.setState({\n      id: this.state.id + 1,\n    });\n    let props = {\n      x: 400,\n      y: 300,\n      \n      radius:80,\n\n      id: \"hexagon\" + this.state.id,\n    };\n    this.setState({\n      hexagon: this.state.hexagon.concat(props),\n    });\n  }\n  drawArrow() {\n    this.setState({\n      arrows: this.state.arrows.concat(1),\n    });\n  }\n\n  render() {\n    console.log(this.state)\n    return (\n      <header>\n        <div class=\"row \" style={{ margin: \"20px\" }}>\n          <div class=\"col-md-3 rename_document_col\">\n            <img src={Logo} width=\"20\" />\n            <span className=\"renameDoc\">\n              <b>Rename Document</b>\n              <i className=\"far fa-save fa-saveicon\"></i>\n              <a\n                href=\"#\"\n                role=\"button\"\n                id=\"dropdownMenuLink\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <i className=\"fas fa-align-left float-right fa-canvasMenu\"></i>\n              </a>\n              <div className=\"dropdown-menu canvas_opt_list\" aria-labelledby=\"dropdownMenuLink\">\n                <Link to=\"/drawing\">\n                  <a className=\"dropdown-item\" href=\"#\">\n                    New Canvas\n                  </a>\n                </Link>\n                <a className=\"dropdown-item\" href=\"#\">\n                  Insert<i className=\"fas fa-play float-right\"></i>\n                </a>\n                <a className=\"dropdown-item\" href=\"#\">\n                  Export<i className=\"fas fa-play float-right\"></i>\n                </a>\n                <a className=\"dropdown-item\" href=\"#\">\n                  Duplicate\n                </a>\n                <a className=\"dropdown-item\" href=\"#\">\n                  Convert to Template\n                </a>\n                <a className=\"dropdown-item\" href=\"#\">\n                  Print\n                </a>\n                <a className=\"dropdown-item\" href=\"#\">\n                  Show Grid\n                </a>\n                <a className=\"dropdown-item\" href=\"#\">\n                  Help<i className=\"fas fa-play float-right\"></i>\n                </a>\n                <a className=\"dropdown-item\" href=\"#\">\n                  Account Settings\n                </a>\n                <a className=\"dropdown-item\" href=\"#\">\n                  Log Out\n                </a>\n              </div>\n            </span>\n          </div>\n          <div className=\"col-md-7 text-center\">\n            <button className=\"alert text-center text-light\" role=\"alert\">\n              Succesfully Saved !\n            </button>\n          </div>\n          <div className=\"col-md-2 icon_btn\">\n            <div className=\"header_panel\">\n              <a href=\"\">\n                <i className=\"far fa-search\"></i>\n              </a>\n              <a href=\"\">\n                <i className=\"far fa-paper-plane\"></i>\n              </a>\n              <a href=\"\">\n                <i className=\"far fa-comment-alt-lines\"></i>\n              </a>\n              <a href=\"\">\n                <i className=\"far fa-user-plus\"></i>\n              </a>\n              <a href=\"\">\n                <i className=\"far fa-file-alt\"></i>\n              </a>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\" style={{height: \"600px\"}}>\n          <div class=\"col-md-1\">\n            <div class=\"sidebar\">\n              <ul class=\"list-group draw_icon\">\n                <li class=\"active\">\n                  {\" \"}\n                  <i class=\"fas fa-location-arrow\"></i>\n                </li>\n                <li>\n                  <i class=\"fal fa-text\"></i>\n                </li>\n                <li className=\"nav-item dropdown\">\n                  <i class=\"far fa-sticky-note\"\n                   id=\"navbarDropdown\"\n                   role=\"button\"\n                   data-toggle=\"dropdown\"\n                   aria-haspopup=\"true\"\n                   aria-expanded=\"false\"\n                  ></i>\n                  <div\n                    className=\"dropdown-menu dropdown-menu-right color_drop\"\n                    aria-labelledby=\"navbarDropdown\"\n                  >\n                  {this.colorlist.map((color,index) =>(<div key={index} className=\"card\">\n                  <div style={{background: color}} className=\"color-pick\" onClick={()=>{\n                    this.setState({\n                    ...this.state,\n                    pickColor:color\n                  })}} />\n                  </div>))}\n                  <div className=\"add_color_pick\">\n                      <a href=\"\"><h6 className=\"add_new_color\"><u>Add New</u></h6></a>\n                  </div>\n                  </div>\n                </li>\n                <li className=\"nav-item dropdown\">\n                  <i\n                    class=\"fal fa-rectangle-wide\"\n                    id=\"navbarDropdown\"\n                    role=\"button\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  ></i>\n\n                  <div\n                    className=\"dropdown-menu dropdown-menu-right shapes\"\n                    aria-labelledby=\"navbarDropdown\"\n                  >\n                    <a className=\"\" href=\"#\" onClick={this.drawRect}>\n                      <i\n                        class=\"fal fa-rectangle-wide shape-rectangle\"\n                        onClick={this.drawRect}\n                      ></i>\n                    </a>\n                    <a className=\"\" href=\"#\" onClick={this.drawCircle}>\n                      <i\n                        className=\"far fa-circle shape-circle\"\n                        onClick={this.drawCircle}\n                      ></i>\n                    </a>\n                    <a className=\"\" href=\"#\">\n                      <i\n                        class=\"fal fa-diamond shape-diamond\"\n                        onClick={this.drawDiamond}\n                      ></i>\n                    </a>\n\n                    <a className=\"\" href=\"#\">\n                      <i\n                        class=\"fal fa-triangle shape-triangle\"\n                        onClick={this.drawTriangle}\n                      ></i>\n                    </a>\n\n                    <div>\n                      <a className=\"\" href=\"#\" onClick={this.drawStar}>\n                        <i\n                          class=\"fal fa-star shape-star\"\n                          onClick={this.drawStar}\n                        ></i>\n                      </a>\n                      <a className=\"\" href=\"#\" onClick={this.drawSquare}>\n                        <i\n                          class=\"fal fa-square shape-square\"\n                          onClick={this.drawSquare}\n                        ></i>\n                      </a>\n                      <a className=\"\" href=\"#\">\n                        <i\n                          class=\"fal fa-hexagon shape-hexagon\"\n                          onClick={this.drawHexagon}\n                        ></i>\n                      </a>\n                    </div>\n                  </div>\n                </li>\n                <li>\n                  <a className=\"\" href=\"#\" onClick={this.drawArrow}>\n                    <i\n                      class=\"far fa-long-arrow-right\"\n                      onClick={this.drawArrow}\n                    ></i>\n                  </a>\n                </li>\n                <li>\n                  <i class=\"fal fa-edit\"></i>\n                </li>\n              </ul>\n            </div>\n            <div class=\"sidebar_sub_menu\">\n              <ul class=\"list-group draw_icon\">\n                <li className=\"nav-item dropdown\">\n                  <i class=\"far fa-th-large\"\n                  id=\"navbarDropdown\"\n                  role=\"button\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                  ></i>\n                   <div\n                    className=\"dropdown-menu dropdown-menu-right screen_container\"\n                    aria-labelledby=\"navbarDropdown\"\n                  >\n                    <h5>Containers</h5>\n                    <hr width=\"260\"></hr>\n                    <img src={Screen1}/>\n                    <img src={Screen2}/>\n                    <img src={Screen3}/>\n                    <div className=\"row sort\">\n                      <div className=\"col-md-3 sort_icon\">\n                       <img src={SortName}/> \n                      </div>\n                      <div className=\"col-md-9 sort_list\">\n                        <label><b>Sort</b></label>\n                        <p>Organize sticky Notes Categories</p>\n                      </div>\n                    </div>\n                  </div>\n                </li>\n                <li>\n                  <i class=\"far fa-list\"></i>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div class=\"col-md-11 drawing\" id=\"drawing\">\n            <Stage\n              width={window.innerWidth}\n              height={window.innerHeight}\n              container=\"drawing\"\n            >\n              <Layer>\n                {this.state.circles &&\n                  this.state.circles.map((circle,i) => <Circles \n                  col={this.state.pickColor}\n                  key={i}\n                  shapeProps={circle}\n                  isSelected={circle.id === this.state.selectedId}\n                  onSelect={() => {\n                  \n                    this.setState({\n                      selectedId: circle.id,\n                    });\n                    console.log(this.state.selectedId);\n                  }}\n                  onChange={(newAttrs) => {\n                    const cirls = this.state.circles.slice();\n                    cirls[i] = newAttrs;\n                   \n                    this.setState({\n                      circles: cirls,\n                    });\n                  }}\n                  />)}\n                {this.state.rectlst &&\n                  this.state.rectlst.map((rect, i) => (\n                    <Rectangle\n                      col={this.state.pickColor}\n                      key={i}\n                      shapeProps={rect}\n                      isSelected={rect.id === this.state.selectedId}\n                      onSelect={() => {\n                        console.log(\"select\");\n                        this.setState({\n                          selectedId: rect.id,\n                        });\n                        console.log(this.state.selectedId);\n                      }}\n                      onChange={(newAttrs) => {\n                        const rects = this.state.rectlst.slice();\n                        rects[i] = newAttrs;\n                        console.log(rects);\n                        this.setState({\n                          rectlst: rects,\n                        });\n                      }}\n                    />\n                  ))}\n                {this.state.square && this.state.square.map((sqr,i) => <Square \n                   col={this.state.pickColor}\n                  key={i}\n                  shapeProps={sqr}\n                  isSelected={sqr.id === this.state.selectedId}\n                  onSelect={() => {\n                  \n                    this.setState({\n                      selectedId: sqr.id,\n                    });\n                    console.log(this.state.selectedId);\n                  }}\n                  onChange={(newAttrs) => {\n                    const squrs = this.state.square.slice();\n                    squrs[i] = newAttrs;\n                   \n                    this.setState({\n                      square: squrs,\n                    });\n                  }}\n                \n                />)}\n\n                {this.state.triangles &&\n                  this.state.triangles.map((triangl,i) => <Triangles \n                  col={this.state.pickColor}\n                  key={i}\n                  shapeProps={triangl}\n                  isSelected={triangl.id === this.state.selectedId}\n                  onSelect={() => {\n                  \n                    this.setState({\n                      selectedId: triangl.id,\n                    });\n                    console.log(this.state.selectedId);\n                  }}\n                  onChange={(newAttrs) => {\n                    const triangl = this.state.triangles.slice();\n                    triangl[i] = newAttrs;\n                   \n                    this.setState({\n                      triangles: triangl,\n                    });\n                  }}\n                  />)}\n\n                {this.state.stars && this.state.stars.map((star,i) => <Stars \n                 col={this.state.pickColor}\n                key={i}\n                shapeProps={star}\n                isSelected={star.id === this.state.selectedId}\n                onSelect={() => {\n                \n                  this.setState({\n                    selectedId: star.id,\n                  });\n                  console.log(this.state.selectedId);\n                }}\n                onChange={(newAttrs) => {\n                  const strs = this.state.stars.slice();\n                  strs[i] = newAttrs;\n                 \n                  this.setState({\n                    stars: strs,\n                  });\n                }}\n                />)}\n\n                {this.state.diamonds &&\n                  this.state.diamonds.map((diamds,i) => <Diamonds \n                  col={this.state.pickColor}\n                  key={i}\n                  shapeProps={diamds}\n                  isSelected={diamds.id === this.state.selectedId}\n                  onSelect={() => {\n                  \n                    this.setState({\n                      selectedId: diamds.id,\n                    });\n                    console.log(this.state.selectedId);\n                  }}\n                  onChange={(newAttrs) => {\n                    const diamd = this.state.diamonds.slice();\n                    diamd[i] = newAttrs;\n                   \n                    this.setState({\n                      diamonds: diamd,\n                    });\n                  }}\n                  />)}\n\n                {this.state.hexagon &&\n                  this.state.hexagon.map((hexa,i) => <Hexagon \n                  col={this.state.pickColor}\n                  key={i}\n                  shapeProps={hexa}\n                  isSelected={hexa.id === this.state.selectedId}\n                  onSelect={() => {\n                  \n                    this.setState({\n                      selectedId: hexa.id,\n                    });\n                    console.log(this.state.selectedId);\n                  }}\n                  onChange={(newAttrs) => {\n                    const hexas = this.state.hexagon.slice();\n                    hexas[i] = newAttrs;\n                   \n                    this.setState({\n                      hexagon: hexas,\n                    });\n                  }}\n                  \n                  />)}\n                \n              </Layer>\n            </Stage>\n          </div>\n        </div>{\" \"}\n        <footer className=\"footer\">\n          <ul class=\"list-group list-group-horizontal backward_forward_btn\">\n            <li class=\"list-group-item\">\n              <i class=\"fas fa-undo\"></i>\n            </li>\n            <li class=\"list-group-item\">\n              <i class=\"far fa-redo-alt\"></i>\n            </li>\n            <li class=\"list-group-item\">\n              <i class=\"far fa-history\"></i>\n            </li>\n            <li class=\"list-group-item\">\n              <i class=\"fas fa-expand-wide\"></i>\n            </li>\n            <li class=\"list-group-item\">\n              {\" \"}\n              <i class=\"far fa-map-marker-alt\"></i>\n            </li>\n          </ul>\n\n          <ul class=\"list-group list-group-horizontal max_min_size\">\n            <li class=\"list-group-item\">\n              <i class=\"fas fa-minus\" style={{ color: \"#137EF9\" }}></i>\n            </li>\n            <li class=\"list-group-item\">\n              <label>100%</label>\n            </li>\n            <li class=\"list-group-item\">\n              <i class=\"far fa-plus\" style={{ color: \"#137EF9\" }}></i>\n            </li>\n          </ul>\n        </footer>\n      </header>\n    );\n  }\n}\n\nexport default Drawing;\n","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Header\\Header.js",["162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Square.js",["186","187","188"],"import React, { useState } from \"react\";\nimport { Stage, Shape, Layer, Transformer } from \"react-konva\";\n\nconst Square = ({ shapeProps, isSelected, onSelect, onChange,col }) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n\n  React.useEffect(() => {\n    if (isSelected) {\n      // we need to attach transformer manually\n      trRef.current.nodes([shapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected]);\n  const [getcolor,setIscolor] = useState(null);\n  function onSelect(){\n    setIscolor(col);\n  }\n\n  return (\n    <>\n      <Shape\n        onClick={onSelect}\n        onTap={onSelect}\n        ref={shapeRef}\n        {...shapeProps}\n        stroke=\"black\"\n        strokeWidth={1}\n        fill={getcolor ||\"white\"}\n        opacity={0.8}\n        \n        draggable\n        sceneFunc={function (context, shape) {\n          context.beginPath();\n\n          context.rect(\n            0,\n            0,\n            shape.getAttr(\"width\"),\n            shape.getAttr(\"height\"),\n            shape.getAttr(\"fill\")\n          );\n\n          context.fillStrokeShape(shape);\n        }}\n        onDragEnd={(e) => {\n          onChange({\n            ...shapeProps,\n            x: e.target.x(),\n            y: e.target.y(),\n          });\n        }}\n        onTransformEnd={(e) => {\n          // transformer is changing scale of the node\n          // and NOT its width or height\n          // but in the store we have only width and height\n          // to match the data better we will reset scale on transform end\n          const node = shapeRef.current;\n          const scaleX = node.scaleX();\n          const scaleY = node.scaleY();\n\n          // we will reset it back\n          node.scaleX(1);\n          node.scaleY(1);\n          onChange({\n            ...shapeProps,\n            x: node.x(),\n            y: node.y(),\n            // set minimal value\n            width: Math.max(5, node.width() * scaleX),\n            height: Math.max(node.height() * scaleY),\n          });\n        }}\n      />\n      {isSelected && (\n        <Transformer\n          ref={trRef}\n         \n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )}\n    </>\n  );\n};\nexport default Square","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Stars.js",["189","190","191","192"],"import React, { useState } from \"react\";\nimport { Stage, Star, Layer, Circle, Transformer } from \"react-konva\";\n\nconst Stars = ({ shapeProps, isSelected, onSelect, onChange,col }) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n\n  React.useEffect(() => {\n    if (isSelected) {\n      // we need to attach transformer manually\n      trRef.current.nodes([shapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected]);\n  const [getcolor,setIscolor] = useState(null);\n  function onSelect(){\n    setIscolor(col);\n  }\n\n  return (\n    <>\n      <Star\n        onClick={onSelect}\n        onTap={onSelect}\n        ref={shapeRef}\n        {...shapeProps}\n        stroke=\"black\"\n        strokeWidth={1}\n        fill={getcolor ||\"white\"}\n        opacity={0.8}\n        \n        draggable\n       \n        onDragEnd={(e) => {\n          onChange({\n            ...shapeProps,\n            x: e.target.x(),\n            y: e.target.y(),\n          });\n        }}\n        onTransformEnd={(e) => {\n          // transformer is changing scale of the node\n          // and NOT its width or height\n          // but in the store we have only width and height\n          // to match the data better we will reset scale on transform end\n          const node = shapeRef.current;\n          const scaleX = node.scaleX();\n          const scaleY = node.scaleY();\n\n          // we will reset it back\n          node.scaleX(1);\n          node.scaleY(1);\n          onChange({\n            ...shapeProps,\n            x: node.x(),\n            y: node.y(),\n            // set minimal value\n            width: Math.max(5, node.width() * scaleX),\n            height: Math.max(node.height() * scaleY),\n          });\n        }}\n      />\n      {isSelected && (\n        <Transformer\n          ref={trRef}\n         \n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )}\n    </>\n  );\n};\nexport default Stars","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Rectangle.js",["193"],"import React, { useState } from \"react\";\nimport { Rect, Transformer } from \"react-konva\";\nconst Rectangle = ({ shapeProps, isSelected, onSelect, onChange,col }) => {\n    const shapeRef = React.useRef();\n    const trRef = React.useRef();\n  \n    React.useEffect(() => {\n      if (isSelected) {\n        // we need to attach transformer manually\n        trRef.current.nodes([shapeRef.current]);\n        trRef.current.getLayer().batchDraw();\n      }\n    }, [isSelected]);\n  const [getcolor,setIscolor] = useState(null);\n  function onSelect(){\n    setIscolor(col);\n  }\n    return (\n      <>\n        <Rect\n          onClick={onSelect}\n          onTap={onSelect}\n          ref={shapeRef}\n          {...shapeProps}\n          stroke=\"black\"\n          strokeWidth={1}\n          fill={getcolor ||\"white\"}\n          opacity={0.8}\n          \n          draggable\n          onDragEnd={(e) => {\n            onChange({\n              ...shapeProps,\n              x: e.target.x(),\n              y: e.target.y(),\n            });\n          }}\n          onTransformEnd={(e) => {\n            // transformer is changing scale of the node\n            // and NOT its width or height\n            // but in the store we have only width and height\n            // to match the data better we will reset scale on transform end\n            const node = shapeRef.current;\n            const scaleX = node.scaleX();\n            const scaleY = node.scaleY();\n  \n            // we will reset it back\n            node.scaleX(1);\n            node.scaleY(1);\n            onChange({\n              ...shapeProps,\n              x: node.x(),\n              y: node.y(),\n              // set minimal value\n              width: Math.max(5, node.width() * scaleX),\n              height: Math.max(node.height() * scaleY),\n            });\n          }}\n        />\n        {isSelected && (\n          <Transformer\n            ref={trRef}\n           \n            boundBoxFunc={(oldBox, newBox) => {\n              // limit resize\n              if (newBox.width < 5 || newBox.height < 5) {\n                return oldBox;\n              }\n              return newBox;\n            }}\n          />\n        )}\n      </>\n    );\n  };\nexport default Rectangle","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Circles.js",["194","195","196"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { Circle, Transformer } from \"react-konva\";\nconst Circles = ({ shapeProps, isSelected, onSelect, onChange,col }) => {\n    const shapeRef = React.useRef();\n    const trRef = React.useRef();\n  \n    React.useEffect(() => {\n      if (isSelected) {\n        // we need to attach transformer manually\n        trRef.current.nodes([shapeRef.current]);\n        trRef.current.getLayer().batchDraw();\n      }\n    }, [isSelected]);\n    const [getcolor,setIscolor] = useState(null);\n   function onSelect(){\n    setIscolor(col);\n  }\n  \n    return (\n      <>\n        <Circle\n          onClick={onSelect}\n          onTap={onSelect}\n          ref={shapeRef}\n          {...shapeProps}\n          stroke=\"black\"\n          strokeWidth={1}\n          fill={getcolor ||\"white\"}\n          opacity={0.8}\n          \n          draggable\n          onDragEnd={(e) => {\n            onChange({\n              ...shapeProps,\n              x: e.target.x(),\n              y: e.target.y(),\n            });\n          }}\n          onTransformEnd={(e) => {\n            // transformer is changing scale of the node\n            // and NOT its width or height\n            // but in the store we have only width and height\n            // to match the data better we will reset scale on transform end\n            const node = shapeRef.current;\n            const scaleX = node.scaleX();\n            const scaleY = node.scaleY();\n  \n            // we will reset it back\n            node.scaleX(1);\n            node.scaleY(1);\n            onChange({\n              ...shapeProps,\n              x: node.x(),\n              y: node.y(),\n              // set minimal value\n              width: Math.max(5, node.width() * scaleX),\n              height: Math.max(node.height() * scaleY),\n            });\n          }}\n        />\n        {isSelected && (\n          <Transformer\n            ref={trRef}\n           \n            boundBoxFunc={(oldBox, newBox) => {\n              // limit resize\n              if (newBox.width < 5 || newBox.height < 5) {\n                return oldBox;\n              }\n              return newBox;\n            }}\n          />\n        )}\n      </>\n    );\n  };\nexport default Circles","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Hexagon.js",["197","198","199","200"],"import React, { useState } from \"react\";\nimport { Stage, RegularPolygon, Layer, Circle, Transformer } from \"react-konva\";\n\nconst Hexagon = ({ shapeProps, isSelected, onSelect, onChange,col }) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n\n  React.useEffect(() => {\n    if (isSelected) {\n      // we need to attach transformer manually\n      trRef.current.nodes([shapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected]);\n  const [getcolor,setIscolor] = useState(null);\n  function onSelect(){\n    setIscolor(col);\n  }\n\n  return (\n    <>\n      <RegularPolygon\n      sides={6}\n        onClick={onSelect}\n        onTap={onSelect}\n        ref={shapeRef}\n        {...shapeProps}\n        stroke=\"black\"\n        strokeWidth={1}\n        fill={getcolor ||\"white\"}\n        opacity={0.8}\n        \n        draggable\n       \n        onDragEnd={(e) => {\n          onChange({\n            ...shapeProps,\n            x: e.target.x(),\n            y: e.target.y(),\n          });\n        }}\n        onTransformEnd={(e) => {\n          // transformer is changing scale of the node\n          // and NOT its width or height\n          // but in the store we have only width and height\n          // to match the data better we will reset scale on transform end\n          const node = shapeRef.current;\n          const scaleX = node.scaleX();\n          const scaleY = node.scaleY();\n\n          // we will reset it back\n          node.scaleX(1);\n          node.scaleY(1);\n          onChange({\n            ...shapeProps,\n            x: node.x(),\n            y: node.y(),\n            // set minimal value\n            width: Math.max(5, node.width() * scaleX),\n            height: Math.max(node.height() * scaleY),\n          });\n        }}\n      />\n      {isSelected && (\n        <Transformer\n          ref={trRef}\n         \n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )}\n    </>\n  );\n};\nexport default Hexagon\n","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Triangles.js",["201","202","203","204"],"import React, { useState } from \"react\";\nimport { Stage, RegularPolygon, Layer, Circle, Transformer } from \"react-konva\";\n\nconst Triangles = ({ shapeProps, isSelected, onSelect, onChange,col }) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n\n  React.useEffect(() => {\n    if (isSelected) {\n      // we need to attach transformer manually\n      trRef.current.nodes([shapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected]);\n  const [getcolor,setIscolor] = useState(null);\n  function onSelect(){\n    setIscolor(col);\n  }\n\n  return (\n    <>\n      <RegularPolygon\n      sides={3}\n        onClick={onSelect}\n        onTap={onSelect}\n        ref={shapeRef}\n        {...shapeProps}\n        stroke=\"black\"\n        strokeWidth={1}\n        fill={getcolor ||\"white\"}\n        opacity={0.8}\n        \n        draggable\n       \n        onDragEnd={(e) => {\n          onChange({\n            ...shapeProps,\n            x: e.target.x(),\n            y: e.target.y(),\n          });\n        }}\n        onTransformEnd={(e) => {\n          // transformer is changing scale of the node\n          // and NOT its width or height\n          // but in the store we have only width and height\n          // to match the data better we will reset scale on transform end\n          const node = shapeRef.current;\n          const scaleX = node.scaleX();\n          const scaleY = node.scaleY();\n\n          // we will reset it back\n          node.scaleX(1);\n          node.scaleY(1);\n          onChange({\n            ...shapeProps,\n            x: node.x(),\n            y: node.y(),\n            // set minimal value\n            width: Math.max(5, node.width() * scaleX),\n            height: Math.max(node.height() * scaleY),\n          });\n        }}\n      />\n      {isSelected && (\n        <Transformer\n          ref={trRef}\n         \n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )}\n    </>\n  );\n};\nexport default Triangles","C:\\Users\\AmitVishwakarma\\Desktop\\sozofrontend-Shariq\\src\\Drawing\\Diamonds.js",["205","206","207","208"],"import React, { useState } from \"react\";\nimport { Stage,RegularPolygon, Layer, Circle,Transformer} from 'react-konva';\n\nconst Diamonds = ({ shapeProps, isSelected, onSelect, onChange,col }) => {\n    const shapeRef = React.useRef();\n    const trRef = React.useRef();\n  \n    React.useEffect(() => {\n      if (isSelected) {\n        // we need to attach transformer manually\n        trRef.current.nodes([shapeRef.current]);\n        trRef.current.getLayer().batchDraw();\n      }\n    }, [isSelected]);\n    const [getcolor,setIscolor] = useState(null);\n    function onSelect(){\n      setIscolor(col);\n    }\n  \n    return (\n      <>\n        <RegularPolygon\n        sides={4}\n          onClick={onSelect}\n          onTap={onSelect}\n          ref={shapeRef}\n          {...shapeProps}\n          stroke=\"black\"\n          strokeWidth={1}\n          fill={getcolor ||\"white\"}\n          opacity={0.8}\n          \n          draggable\n         \n          onDragEnd={(e) => {\n            onChange({\n              ...shapeProps,\n              x: e.target.x(),\n              y: e.target.y(),\n            });\n          }}\n          onTransformEnd={(e) => {\n            // transformer is changing scale of the node\n            // and NOT its width or height\n            // but in the store we have only width and height\n            // to match the data better we will reset scale on transform end\n            const node = shapeRef.current;\n            const scaleX = node.scaleX();\n            const scaleY = node.scaleY();\n  \n            // we will reset it back\n            node.scaleX(1);\n            node.scaleY(1);\n            onChange({\n              ...shapeProps,\n              x: node.x(),\n              y: node.y(),\n              // set minimal value\n              width: Math.max(5, node.width() * scaleX),\n              height: Math.max(node.height() * scaleY),\n            });\n          }}\n        />\n        {isSelected && (\n          <Transformer\n            ref={trRef}\n           \n            boundBoxFunc={(oldBox, newBox) => {\n              // limit resize\n              if (newBox.width < 5 || newBox.height < 5) {\n                return oldBox;\n              }\n              return newBox;\n            }}\n          />\n        )}\n      </>\n    );\n  };\nexport default Diamonds",{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":1,"column":8,"nodeType":"215","messageId":"216","endLine":1,"endColumn":12},{"ruleId":"213","severity":1,"message":"217","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":16},{"ruleId":"213","severity":1,"message":"218","line":5,"column":8,"nodeType":"215","messageId":"216","endLine":5,"endColumn":14},{"ruleId":"213","severity":1,"message":"219","line":7,"column":8,"nodeType":"215","messageId":"216","endLine":7,"endColumn":17},{"ruleId":"213","severity":1,"message":"220","line":9,"column":50,"nodeType":"215","messageId":"216","endLine":9,"endColumn":54},{"ruleId":"221","severity":1,"message":"222","line":24,"column":15,"nodeType":"223","endLine":24,"endColumn":55},{"ruleId":"221","severity":1,"message":"222","line":25,"column":15,"nodeType":"223","endLine":25,"endColumn":75},{"ruleId":"224","severity":1,"message":"225","line":32,"column":19,"nodeType":"223","endLine":32,"endColumn":59},{"ruleId":"221","severity":1,"message":"226","line":36,"column":21,"nodeType":"223","endLine":36,"endColumn":87},{"ruleId":"221","severity":1,"message":"226","line":43,"column":23,"nodeType":"223","endLine":43,"endColumn":153},{"ruleId":"221","severity":1,"message":"222","line":48,"column":25,"nodeType":"223","endLine":48,"endColumn":63},{"ruleId":"221","severity":1,"message":"222","line":49,"column":25,"nodeType":"223","endLine":49,"endColumn":134},{"ruleId":"221","severity":1,"message":"222","line":52,"column":25,"nodeType":"223","endLine":52,"endColumn":63},{"ruleId":"221","severity":1,"message":"222","line":53,"column":25,"nodeType":"223","endLine":53,"endColumn":116},{"ruleId":"221","severity":1,"message":"222","line":54,"column":25,"nodeType":"223","endLine":54,"endColumn":63},{"ruleId":"221","severity":1,"message":"222","line":55,"column":25,"nodeType":"223","endLine":55,"endColumn":63},{"ruleId":"224","severity":1,"message":"225","line":73,"column":29,"nodeType":"223","endLine":73,"endColumn":103},{"ruleId":"224","severity":1,"message":"225","line":81,"column":29,"nodeType":"223","endLine":81,"endColumn":46},{"ruleId":"224","severity":1,"message":"225","line":92,"column":180,"nodeType":"223","endLine":92,"endColumn":211},{"ruleId":"221","severity":1,"message":"222","line":97,"column":35,"nodeType":"223","endLine":97,"endColumn":80},{"ruleId":"224","severity":1,"message":"225","line":97,"column":81,"nodeType":"223","endLine":97,"endColumn":112},{"ruleId":"221","severity":1,"message":"222","line":98,"column":35,"nodeType":"223","endLine":98,"endColumn":73},{"ruleId":"224","severity":1,"message":"225","line":98,"column":73,"nodeType":"223","endLine":98,"endColumn":96},{"ruleId":"221","severity":1,"message":"222","line":99,"column":35,"nodeType":"223","endLine":99,"endColumn":73},{"ruleId":"224","severity":1,"message":"225","line":99,"column":73,"nodeType":"223","endLine":99,"endColumn":99},{"ruleId":"221","severity":1,"message":"222","line":100,"column":36,"nodeType":"223","endLine":100,"endColumn":74},{"ruleId":"224","severity":1,"message":"225","line":100,"column":74,"nodeType":"223","endLine":100,"endColumn":97},{"ruleId":"221","severity":1,"message":"222","line":129,"column":18,"nodeType":"223","endLine":129,"endColumn":163},{"ruleId":"224","severity":1,"message":"225","line":129,"column":163,"nodeType":"223","endLine":129,"endColumn":195},{"ruleId":"221","severity":1,"message":"222","line":130,"column":18,"nodeType":"223","endLine":130,"endColumn":163},{"ruleId":"224","severity":1,"message":"225","line":130,"column":163,"nodeType":"223","endLine":130,"endColumn":192},{"ruleId":"221","severity":1,"message":"222","line":131,"column":18,"nodeType":"223","endLine":131,"endColumn":165},{"ruleId":"224","severity":1,"message":"225","line":131,"column":165,"nodeType":"223","endLine":131,"endColumn":194},{"ruleId":"221","severity":1,"message":"222","line":132,"column":18,"nodeType":"223","endLine":132,"endColumn":165},{"ruleId":"224","severity":1,"message":"225","line":132,"column":165,"nodeType":"223","endLine":132,"endColumn":194},{"ruleId":"221","severity":1,"message":"222","line":133,"column":18,"nodeType":"223","endLine":133,"endColumn":165},{"ruleId":"224","severity":1,"message":"225","line":133,"column":165,"nodeType":"223","endLine":133,"endColumn":194},{"ruleId":"224","severity":1,"message":"225","line":151,"column":172,"nodeType":"223","endLine":151,"endColumn":230},{"ruleId":"221","severity":1,"message":"222","line":156,"column":28,"nodeType":"223","endLine":156,"endColumn":93},{"ruleId":"224","severity":1,"message":"225","line":156,"column":94,"nodeType":"223","endLine":156,"endColumn":125},{"ruleId":"221","severity":1,"message":"222","line":157,"column":28,"nodeType":"223","endLine":157,"endColumn":66},{"ruleId":"224","severity":1,"message":"225","line":157,"column":66,"nodeType":"223","endLine":157,"endColumn":89},{"ruleId":"221","severity":1,"message":"222","line":158,"column":28,"nodeType":"223","endLine":158,"endColumn":66},{"ruleId":"224","severity":1,"message":"225","line":158,"column":66,"nodeType":"223","endLine":158,"endColumn":92},{"ruleId":"221","severity":1,"message":"222","line":159,"column":29,"nodeType":"223","endLine":159,"endColumn":67},{"ruleId":"224","severity":1,"message":"225","line":159,"column":67,"nodeType":"223","endLine":159,"endColumn":90},{"ruleId":"224","severity":1,"message":"225","line":171,"column":52,"nodeType":"223","endLine":171,"endColumn":103},{"ruleId":"224","severity":1,"message":"225","line":178,"column":52,"nodeType":"223","endLine":178,"endColumn":102},{"ruleId":"224","severity":1,"message":"225","line":185,"column":52,"nodeType":"223","endLine":185,"endColumn":103},{"ruleId":"224","severity":1,"message":"225","line":192,"column":52,"nodeType":"223","endLine":192,"endColumn":103},{"ruleId":"224","severity":1,"message":"225","line":268,"column":29,"nodeType":"223","endLine":268,"endColumn":56},{"ruleId":"224","severity":1,"message":"225","line":283,"column":17,"nodeType":"223","endLine":283,"endColumn":57},{"ruleId":"224","severity":1,"message":"225","line":287,"column":19,"nodeType":"223","endLine":287,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":301,"column":17,"nodeType":"223","endLine":301,"endColumn":57},{"ruleId":"224","severity":1,"message":"225","line":305,"column":19,"nodeType":"223","endLine":305,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":317,"column":21,"nodeType":"223","endLine":317,"endColumn":61},{"ruleId":"224","severity":1,"message":"225","line":321,"column":23,"nodeType":"223","endLine":321,"endColumn":51},{"ruleId":"224","severity":1,"message":"225","line":335,"column":17,"nodeType":"223","endLine":335,"endColumn":34},{"ruleId":"224","severity":1,"message":"225","line":340,"column":17,"nodeType":"223","endLine":340,"endColumn":34},{"ruleId":"224","severity":1,"message":"225","line":345,"column":17,"nodeType":"223","endLine":345,"endColumn":34},{"ruleId":"213","severity":1,"message":"218","line":3,"column":8,"nodeType":"215","messageId":"216","endLine":3,"endColumn":14},{"ruleId":"213","severity":1,"message":"227","line":4,"column":27,"nodeType":"215","messageId":"216","endLine":4,"endColumn":33},{"ruleId":"213","severity":1,"message":"228","line":4,"column":35,"nodeType":"215","messageId":"216","endLine":4,"endColumn":41},{"ruleId":"213","severity":1,"message":"229","line":4,"column":43,"nodeType":"215","messageId":"216","endLine":4,"endColumn":48},{"ruleId":"213","severity":1,"message":"230","line":12,"column":24,"nodeType":"215","messageId":"216","endLine":12,"endColumn":29},{"ruleId":"213","severity":1,"message":"231","line":18,"column":8,"nodeType":"215","messageId":"216","endLine":18,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":174,"column":13,"nodeType":"223","endLine":174,"endColumn":42},{"ruleId":"221","severity":1,"message":"222","line":178,"column":15,"nodeType":"223","endLine":185,"endColumn":16},{"ruleId":"221","severity":1,"message":"222","line":190,"column":19,"nodeType":"223","endLine":190,"endColumn":57},{"ruleId":"221","severity":1,"message":"222","line":194,"column":17,"nodeType":"223","endLine":194,"endColumn":55},{"ruleId":"221","severity":1,"message":"222","line":197,"column":17,"nodeType":"223","endLine":197,"endColumn":55},{"ruleId":"221","severity":1,"message":"222","line":200,"column":17,"nodeType":"223","endLine":200,"endColumn":55},{"ruleId":"221","severity":1,"message":"222","line":203,"column":17,"nodeType":"223","endLine":203,"endColumn":55},{"ruleId":"221","severity":1,"message":"222","line":206,"column":17,"nodeType":"223","endLine":206,"endColumn":55},{"ruleId":"221","severity":1,"message":"222","line":209,"column":17,"nodeType":"223","endLine":209,"endColumn":55},{"ruleId":"221","severity":1,"message":"222","line":212,"column":17,"nodeType":"223","endLine":212,"endColumn":55},{"ruleId":"221","severity":1,"message":"222","line":215,"column":17,"nodeType":"223","endLine":215,"endColumn":55},{"ruleId":"221","severity":1,"message":"222","line":218,"column":17,"nodeType":"223","endLine":218,"endColumn":55},{"ruleId":"221","severity":1,"message":"222","line":231,"column":15,"nodeType":"223","endLine":231,"endColumn":26},{"ruleId":"221","severity":1,"message":"222","line":234,"column":15,"nodeType":"223","endLine":234,"endColumn":26},{"ruleId":"221","severity":1,"message":"222","line":237,"column":15,"nodeType":"223","endLine":237,"endColumn":26},{"ruleId":"221","severity":1,"message":"222","line":240,"column":15,"nodeType":"223","endLine":240,"endColumn":26},{"ruleId":"221","severity":1,"message":"222","line":243,"column":15,"nodeType":"223","endLine":243,"endColumn":26},{"ruleId":"221","severity":1,"message":"222","line":280,"column":23,"nodeType":"223","endLine":280,"endColumn":34},{"ruleId":"221","severity":1,"message":"222","line":298,"column":21,"nodeType":"223","endLine":298,"endColumn":70},{"ruleId":"221","severity":1,"message":"222","line":304,"column":21,"nodeType":"223","endLine":304,"endColumn":72},{"ruleId":"221","severity":1,"message":"222","line":310,"column":21,"nodeType":"223","endLine":310,"endColumn":46},{"ruleId":"221","severity":1,"message":"222","line":317,"column":21,"nodeType":"223","endLine":317,"endColumn":46},{"ruleId":"221","severity":1,"message":"222","line":325,"column":23,"nodeType":"223","endLine":325,"endColumn":72},{"ruleId":"221","severity":1,"message":"222","line":331,"column":23,"nodeType":"223","endLine":331,"endColumn":74},{"ruleId":"221","severity":1,"message":"222","line":337,"column":23,"nodeType":"223","endLine":337,"endColumn":48},{"ruleId":"221","severity":1,"message":"222","line":347,"column":19,"nodeType":"223","endLine":347,"endColumn":69},{"ruleId":"224","severity":1,"message":"225","line":375,"column":21,"nodeType":"223","endLine":375,"endColumn":41},{"ruleId":"224","severity":1,"message":"225","line":376,"column":21,"nodeType":"223","endLine":376,"endColumn":41},{"ruleId":"224","severity":1,"message":"225","line":377,"column":21,"nodeType":"223","endLine":377,"endColumn":41},{"ruleId":"224","severity":1,"message":"225","line":380,"column":24,"nodeType":"223","endLine":380,"endColumn":45},{"ruleId":"213","severity":1,"message":"227","line":8,"column":20,"nodeType":"215","messageId":"216","endLine":8,"endColumn":26},{"ruleId":"213","severity":1,"message":"228","line":9,"column":3,"nodeType":"215","messageId":"216","endLine":9,"endColumn":9},{"ruleId":"213","severity":1,"message":"229","line":10,"column":3,"nodeType":"215","messageId":"216","endLine":10,"endColumn":8},{"ruleId":"224","severity":1,"message":"225","line":40,"column":15,"nodeType":"223","endLine":40,"endColumn":44},{"ruleId":"221","severity":1,"message":"222","line":84,"column":17,"nodeType":"223","endLine":84,"endColumn":46},{"ruleId":"221","severity":1,"message":"222","line":90,"column":17,"nodeType":"223","endLine":90,"endColumn":51},{"ruleId":"221","severity":1,"message":"222","line":99,"column":17,"nodeType":"223","endLine":99,"endColumn":51},{"ruleId":"221","severity":1,"message":"222","line":106,"column":17,"nodeType":"223","endLine":106,"endColumn":50},{"ruleId":"221","severity":1,"message":"222","line":153,"column":19,"nodeType":"223","endLine":153,"endColumn":52},{"ruleId":"221","severity":1,"message":"222","line":161,"column":19,"nodeType":"223","endLine":161,"endColumn":152},{"ruleId":"221","severity":1,"message":"226","line":165,"column":17,"nodeType":"223","endLine":165,"endColumn":42},{"ruleId":"221","severity":1,"message":"222","line":176,"column":21,"nodeType":"223","endLine":176,"endColumn":73},{"ruleId":"224","severity":1,"message":"225","line":179,"column":27,"nodeType":"223","endLine":179,"endColumn":61},{"ruleId":"221","severity":1,"message":"222","line":191,"column":21,"nodeType":"223","endLine":191,"endColumn":73},{"ruleId":"224","severity":1,"message":"225","line":194,"column":23,"nodeType":"223","endLine":194,"endColumn":57},{"ruleId":"221","severity":1,"message":"222","line":206,"column":21,"nodeType":"223","endLine":206,"endColumn":73},{"ruleId":"224","severity":1,"message":"225","line":209,"column":27,"nodeType":"223","endLine":209,"endColumn":61},{"ruleId":"232","severity":1,"message":"233","line":222,"column":19,"nodeType":"223","endLine":230,"endColumn":20},{"ruleId":"221","severity":1,"message":"222","line":222,"column":19,"nodeType":"223","endLine":230,"endColumn":20},{"ruleId":"221","severity":1,"message":"222","line":235,"column":21,"nodeType":"223","endLine":235,"endColumn":59},{"ruleId":"221","severity":1,"message":"222","line":239,"column":21,"nodeType":"223","endLine":239,"endColumn":59},{"ruleId":"221","severity":1,"message":"222","line":243,"column":21,"nodeType":"223","endLine":243,"endColumn":59},{"ruleId":"221","severity":1,"message":"226","line":244,"column":22,"nodeType":"223","endLine":244,"endColumn":54},{"ruleId":"224","severity":1,"message":"225","line":249,"column":19,"nodeType":"223","endLine":249,"endColumn":48},{"ruleId":"213","severity":1,"message":"234","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":15},{"ruleId":"213","severity":1,"message":"235","line":2,"column":24,"nodeType":"215","messageId":"216","endLine":2,"endColumn":29},{"ruleId":"236","severity":1,"message":"237","line":16,"column":12,"nodeType":"215","messageId":"238","endLine":16,"endColumn":20},{"ruleId":"213","severity":1,"message":"234","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":15},{"ruleId":"213","severity":1,"message":"235","line":2,"column":23,"nodeType":"215","messageId":"216","endLine":2,"endColumn":28},{"ruleId":"213","severity":1,"message":"239","line":2,"column":30,"nodeType":"215","messageId":"216","endLine":2,"endColumn":36},{"ruleId":"236","severity":1,"message":"237","line":16,"column":12,"nodeType":"215","messageId":"238","endLine":16,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":15,"column":12,"nodeType":"215","messageId":"238","endLine":15,"endColumn":20},{"ruleId":"213","severity":1,"message":"240","line":1,"column":27,"nodeType":"215","messageId":"216","endLine":1,"endColumn":36},{"ruleId":"213","severity":1,"message":"241","line":1,"column":38,"nodeType":"215","messageId":"216","endLine":1,"endColumn":44},{"ruleId":"236","severity":1,"message":"237","line":15,"column":13,"nodeType":"215","messageId":"238","endLine":15,"endColumn":21},{"ruleId":"213","severity":1,"message":"234","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":15},{"ruleId":"213","severity":1,"message":"235","line":2,"column":33,"nodeType":"215","messageId":"216","endLine":2,"endColumn":38},{"ruleId":"213","severity":1,"message":"239","line":2,"column":40,"nodeType":"215","messageId":"216","endLine":2,"endColumn":46},{"ruleId":"236","severity":1,"message":"237","line":16,"column":12,"nodeType":"215","messageId":"238","endLine":16,"endColumn":20},{"ruleId":"213","severity":1,"message":"234","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":15},{"ruleId":"213","severity":1,"message":"235","line":2,"column":33,"nodeType":"215","messageId":"216","endLine":2,"endColumn":38},{"ruleId":"213","severity":1,"message":"239","line":2,"column":40,"nodeType":"215","messageId":"216","endLine":2,"endColumn":46},{"ruleId":"236","severity":1,"message":"237","line":16,"column":12,"nodeType":"215","messageId":"238","endLine":16,"endColumn":20},{"ruleId":"213","severity":1,"message":"234","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":15},{"ruleId":"213","severity":1,"message":"235","line":2,"column":32,"nodeType":"215","messageId":"216","endLine":2,"endColumn":37},{"ruleId":"213","severity":1,"message":"239","line":2,"column":39,"nodeType":"215","messageId":"216","endLine":2,"endColumn":45},{"ruleId":"236","severity":1,"message":"237","line":16,"column":14,"nodeType":"215","messageId":"238","endLine":16,"endColumn":22},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Drawing1' is defined but never used.","'Sketch' is defined but never used.","'Dashboard' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Arrow' is defined but never used.","'Konva' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'Stage' is defined but never used.","'Layer' is defined but never used.","no-redeclare","'onSelect' is already defined.","redeclared","'Circle' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]